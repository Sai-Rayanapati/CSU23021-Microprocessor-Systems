


ARM Macro Assembler    Page 1 


    1 00000000         ; Interrupt Handling Sample
    2 00000000         ; (c) Mike Brady, 2021.
    3 00000000         
    4 00000000                 area             tcd,code,readonly
    5 00000000                 export           __main
    6 00000000         __main
    7 00000000         
    8 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    9 00000000         
   10 00000000         ; Timer Stuff -- UM, Table 173
   11 00000000         
   12 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
   13 00000000 E0008000 
                       T1      equ              0xE0008000
   14 00000000         
   15 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
   16 00000000 00000004 
                       TCR     equ              4
   17 00000000 00000014 
                       MCR     equ              0x14
   18 00000000 00000018 
                       MR0     equ              0x18
   19 00000000         
   20 00000000 00000002 
                       TimerCommandReset
                               equ              2
   21 00000000 00000001 
                       TimerCommandRun
                               equ              1
   22 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   23 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   24 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   25 00000000         
   26 00000000         ; VIC Stuff -- UM, Table 41
   27 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   28 00000000 00000010 
                       IntEnable
                               equ              0x10
   29 00000000 00000030 
                       VectAddr
                               equ              0x30
   30 00000000 00000100 
                       VectAddr0
                               equ              0x100
   31 00000000 00000200 



ARM Macro Assembler    Page 2 


                       VectCtrl0
                               equ              0x200
   32 00000000         
   33 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   34 00000000 00000010 
                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   35 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   36 00000000         
   37 00000000         ; initialisation code
   38 00000000         
   39 00000000         ; Initialise the VIC
   40 00000000 E59F004C        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   41 00000004         
   42 00000004 E59F104C        ldr              r1,=irqhan
   43 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   44 0000000C         
   45 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   46 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   47 00000014         
   48 00000014 E3A01010        mov              r1,#Timer0Mask
   49 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   50 0000001C         
   51 0000001C E3A01000        mov              r1,#0
   52 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   53 00000024         
   54 00000024         ; Initialise Timer 0
   55 00000024 E59F0030        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   56 00000028         
   57 00000028 E3A01002        mov              r1,#TimerCommandReset
   58 0000002C E5801004        str              r1,[r0,#TCR]
   59 00000030         
   60 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts
   61 00000034 E5801000        str              r1,[r0,#IR]
   62 00000038         
   63 00000038 E59F1020        ldr              r1,=(14745600/1600)-1 ; 625 us 
                                                            = 1/1600 second
   64 0000003C E5801018        str              r1,[r0,#MR0]
   65 00000040         
   66 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt



ARM Macro Assembler    Page 3 


   67 00000044 E5801014        str              r1,[r0,#MCR]
   68 00000048         
   69 00000048 E3A01001        mov              r1,#TimerCommandRun
   70 0000004C E5801004        str              r1,[r0,#TCR]
   71 00000050         
   72 00000050         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   73 00000050         
   74 00000050 EAFFFFFE 
                       fin     b                fin
   75 00000054         
   76 00000054 FFFFF000 
              00000000 
              E0004000 
              000023FF         AREA             InterruptStuff, CODE, READONLY
   77 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
   78 00000004 E92D4003        stmfd            sp!,{r0-r1,lr} ; the lr will be
                                                             restored to the pc
                                                            
   79 00000008         
   80 00000008         ;this is the body of the interrupt handler
   81 00000008         
   82 00000008         ;here you'd put the unique part of your interrupt handle
                       r
   83 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
   84 00000008         
   85 00000008         ;this is where we stop the timer from making the interru
                       pt request to the VIC
   86 00000008         ;i.e. we 'acknowledge' the interrupt
   87 00000008 E59F0014        ldr              r0,=T0
   88 0000000C E3A01001        mov              r1,#TimerResetTimer0Interrupt
   89 00000010 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
   90 00000014         
   91 00000014         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
   92 00000014 E59F000C        ldr              r0,=VIC
   93 00000018 E3A01000        mov              r1,#0
   94 0000001C E5801030        str              r1,[r0,#VectAddr] ; reset VIC
   95 00000020         
   96 00000020 E8FD8003        ldmfd            sp!,{r0-r1,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
   97 00000024         ; and also restoring the CPSR
   98 00000024         
   99 00000024                 END
              E0004000 
              FFFFF000 
Command Line: --debug --diag_suppress=9931 --apcs=interwork --depend=.\objects\
tcd.d -o.\objects\tcd.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Includ
e -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefine="__UVISI
ON_VERSION SETA 529" --list=.\listings\tcd.lst TCD.s
